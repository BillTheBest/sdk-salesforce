/// <reference path="../../typings/index.d.ts" />
/// <reference path="../interfaces/ITilesProps.ts" />
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Panels = (function (_super) {
    __extends(Panels, _super);
    function Panels(props) {
        _super.call(this, props);
        this.onSelect = this.onSelect.bind(this);
        this.onOutcome = this.onOutcome.bind(this);
        this.onNext = this.onNext.bind(this);
        this.onPrev = this.onPrev.bind(this);
        this.renderItem = this.renderItem.bind(this);
        this.onSearch = this.onSearch.bind(this);
    }
    Panels.prototype.onSelect = function (e) {
        this.props.select(e.currentTarget.id);
    };
    Panels.prototype.onOutcome = function (e) {
        this.props.onOutcome(e.currentTarget.parentElement.parentElement.id, e.currentTarget.id);
    };
    Panels.prototype.onPrev = function () {
        var _this = this;
        this.props.onPrev();
        setTimeout(function () { return _this.refs['container'].scrollIntoView(true); });
    };
    Panels.prototype.onNext = function () {
        var _this = this;
        this.props.onNext();
        setTimeout(function () { return _this.refs['container'].scrollIntoView(true); });
    };
    Panels.prototype.onSearch = function (search, clearSelection) {
        this.props.onSearch(search, clearSelection);
    };
    Panels.prototype.renderItem = function (item, columns, outcomes, deleteOutcome) {
        if (item.type === 'next')
            return React.createElement("div", {className: "mw-tiles-next", onClick: this.onNext}, React.createElement("span", {className: "glyphicon glyphicon-arrow-right"}));
        if (item.type === 'prev')
            return React.createElement("div", {className: "mw-tiles-prev", onClick: this.onPrev}, React.createElement("span", {className: "glyphicon glyphicon-arrow-left"}));
        var className = 'mw-tiles-item';
        if (item.isSelected)
            className += ' bg-info';
        var header = item.properties.find(function (property) { return property.typeElementPropertyId == columns[0].typeElementPropertyId; }).contentValue;
        var deleteOutcomeElement = null;
        if (deleteOutcome)
            deleteOutcomeElement = React.createElement(manywho.component.getByName('outcome'), { id: deleteOutcome.id, flowKey: this.props.flowKey, onClick: this.onOutcome, size: 'sm' });
        var content = null;
        if (columns.length > 1)
            content = item.properties.find(function (property) { return property.typeElementPropertyId == columns[1].typeElementPropertyId; }).contentValue;
        var footer = null;
        if (columns.length > 2)
            footer = columns.map(function (column, index) {
                if (index > 1) {
                    var property = item.properties.find(function (property) { return property.typeElementPropertyId == column.typeElementPropertyId; });
                    return React.createElement("li", null, React.createElement("strong", null, property.developerName), ": ", property.contentValue);
                }
            });
        return (React.createElement("div", {className: className, onClick: this.onSelect, id: item.externalId}, React.createElement("div", {className: "mw-tiles-item-header"}, React.createElement("h4", {title: header}, header), deleteOutcomeElement), React.createElement("div", {className: "mw-tiles-item-content"}, content), React.createElement("ul", {className: "mw-tiles-item-footer list-unstyled"}, footer), React.createElement("div", {className: "mw-tiles-item-outcomes"}, outcomes)));
    };
    Panels.prototype.render = function () {
        var _this = this;
        manywho.log.info('Rendering Tiles: ' + this.props.id);
        if (this.props.isDesignTime)
            return null;
        var model = manywho.model.getComponent(this.props.id, this.props.flowKey);
        var state = this.props.isDesignTime ? { error: null, loading: false } : manywho.state.getComponent(this.props.id, this.props.flowKey) || {};
        var outcomes = manywho.model.getOutcomes(this.props.id, this.props.flowKey);
        var columns = manywho.component.getDisplayColumns(model.columns) || [];
        var className = manywho.styling.getClasses(this.props.parentId, this.props.id, "tiles", this.props.flowKey).join(' ');
        if (model.isVisible == false)
            className += ' hidden';
        var labelElement = null;
        if (!manywho.utils.isNullOrWhitespace(model.label))
            labelElement = React.createElement("label", null, model.label);
        var headerElement = React.createElement(manywho.component.getByName('mw-items-header'), {
            flowKey: this.props.flowKey,
            isSearchable: model.isSearchable,
            isRefreshable: (model.objectDataRequest || model.fileDataRequest),
            onSearch: this.onSearch,
            outcomes: manywho.model.getOutcomes(this.props.id, this.props.flowKey),
            refresh: this.props.refresh
        });
        var footerOutcomes = outcomes && outcomes
            .filter(function (outcome) { return !manywho.utils.isEqual(outcome.pageActionType, 'Delete', true) && !outcome.isBulkAction; })
            .map(function (outcome) { return React.createElement(manywho.component.getByName('outcome'), { id: outcome.id, flowKey: _this.props.flowKey, onClick: _this.onOutcome, size: 'default' }); });
        var deleteOutcome = outcomes && outcomes
            .filter(function (outcome) { return manywho.utils.isEqual(outcome.pageActionType, 'Delete', true) && !outcome.isBulkAction; })[0];
        var contentElement = null;
        var items = [];
        if (this.props.objectData && !manywho.utils.isPlaceholderObjectData(this.props.objectData)) {
            items = this.props.objectData.map(function (item) { return item; });
            if (this.props.page > 1)
                items.unshift({ type: 'prev' });
            if (this.props.hasMoreResults === true)
                items = items.concat([{ type: 'next' }]);
        }
        if (this.props.contentElement)
            contentElement = this.props.contentElement;
        else {
            contentElement = (React.createElement("div", {className: "mw-tiles-items"}, items.map(function (item, index) {
                var key = _this.props.page.toString() + "-" + index;
                return (React.createElement("div", {className: "mw-tiles-item-container", key: key, ref: "items"}, React.createElement(ReactMotion.Motion, {defaultStyle: { rotate: 0 }, style: { rotate: ReactMotion.spring(180, { stiffness: 65, damping: 9.5 }) }}, function (interpolatingStyle) {
                    var frontTransform = "rotateY(" + interpolatingStyle.rotate + "deg)";
                    var backTransform = "rotateY(" + (180 - interpolatingStyle.rotate) + "deg)";
                    return (React.createElement("div", null, React.createElement("div", {className: "front", style: { transform: frontTransform }}), React.createElement("div", {className: "back", style: { transform: backTransform }}, _this.renderItem(item, columns, footerOutcomes, deleteOutcome))));
                })));
            })));
        }
        return (React.createElement("div", {className: className, id: this.props.id, ref: "container"}, labelElement, headerElement, contentElement, React.createElement(manywho.component.getByName('wait'), { isVisible: state.loading, message: state.loading && state.loading.message }, null)));
    };
    return Panels;
}(React.Component));
manywho.component.registerItems('panels', Panels);

//# sourceMappingURL=data:application/json;base64,
